openapi: 3.0.3
info:
  description: Mon STD22047
  title: BusApp
  version: 1.2.0
servers:
- url: https://STD22047.com
tags:
- description: Operations about stops
  name: stop
- description: Operations about routes
  name: route
- description: Operations about busLines
  name: busLine
paths:
  /stop/get/{id}:
    get:
      operationId: getStop
      parameters:
      - description: 'The name that needs to be fetched. Use stop1 for testing. '
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stop'
          description: successful operation
        "400":
          description: Invalid stopId supplied
        "404":
          description: Stop not found
      summary: Get teacher by stop id
      tags:
      - stop
      x-accepts: application/json
  /stop/add:
    post:
      description: This can only be done by the logged in stop.
      operationId: createStop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stop'
        description: Created stop object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stop'
            application/xml:
              schema:
                $ref: '#/components/schemas/Stop'
          description: successful operation
      summary: Create stop
      tags:
      - stop
      x-contentType: application/json
      x-accepts: application/json
  /stop/update/put/{id}:
    put:
      description: This can only be done by the logged in stop.
      operationId: updateStopById
      parameters:
      - description: name that need to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stop'
          application/xml:
            schema:
              $ref: '#/components/schemas/Stop'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stop'
        description: Update an existent stop in the store
      responses:
        default:
          description: successful operation
      summary: Update stop
      tags:
      - stop
      x-contentType: application/json
      x-accepts: application/json
  /stop/delete/{id}:
    delete:
      description: This can only be done by the logged in stop.
      operationId: deleteStopByID
      parameters:
      - description: The name that needs to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Invalid stopName supplied
        "404":
          description: Stop not found
      summary: Delete stop
      tags:
      - stop
      x-accepts: application/json
  /route/get/{id}:
    get:
      operationId: getRoute
      parameters:
      - description: 'The name that needs to be fetched. Use route1 for testing. '
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
            application/xml:
              schema:
                $ref: '#/components/schemas/Route'
          description: successful operation
        "400":
          description: Invalid routeId supplied
        "404":
          description: Stop not found
      summary: Get route by route id
      tags:
      - route
      x-accepts: application/json
  /route/add:
    post:
      description: This can only be done by the logged in route.
      operationId: createRoutes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/xml:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
        description: Created route object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
            application/xml:
              schema:
                $ref: '#/components/schemas/Route'
          description: successful operation
      summary: Create route
      tags:
      - route
      x-contentType: application/json
      x-accepts: application/json
  /route/update/{id}:
    put:
      description: This can only be done by the logged in route.
      operationId: updateRoute
      parameters:
      - description: name that need to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Route'
          application/xml:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
        description: Update an existent route in the store
      responses:
        default:
          description: successful operation
      summary: Update route
      tags:
      - route
      x-contentType: application/json
      x-accepts: application/json
  /route/delete/{id}:
    delete:
      description: This can only be done by the logged in route.
      operationId: deleteRoute
      parameters:
      - description: The id that needs to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Invalid routeName supplied
        "404":
          description: Id not found
      summary: Delete route
      tags:
      - route
      x-accepts: application/json
  /busLine/get/{id}:
    get:
      operationId: getBusLine
      parameters:
      - description: 'The name that needs to be fetched. Use busLine1 for testing. '
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusLine'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusLine'
          description: successful operation
        "400":
          description: Invalid busLineId supplied
        "404":
          description: BusLine not found
      summary: Get route by busLine id
      tags:
      - busLine
      x-accepts: application/json
  /busLine/add:
    post:
      description: This can only be done by the logged in busLine.
      operationId: createBusLine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusLine'
          application/xml:
            schema:
              $ref: '#/components/schemas/BusLine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusLine'
        description: Created busLine object
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusLine'
            application/xml:
              schema:
                $ref: '#/components/schemas/BusLine'
          description: successful operation
      summary: Create busLine
      tags:
      - busLine
      x-contentType: application/json
      x-accepts: application/json
  /busLine/update/{id}:
    put:
      description: This can only be done by the logged in busLine.
      operationId: updateBusLine
      parameters:
      - description: name that need to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusLine'
          application/xml:
            schema:
              $ref: '#/components/schemas/Route'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Route'
        description: Update an existent busLine in the busLine
      responses:
        default:
          description: successful operation
      summary: Update busLine
      tags:
      - busLine
      x-contentType: application/json
      x-accepts: application/json
  /busLine/delete/{id}:
    delete:
      description: This can only be done by the logged in busLine.
      operationId: deleteBusLine
      parameters:
      - description: The id that needs to be deleted
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          description: Invalid lineNumber supplied
        "404":
          description: Id not found
      summary: Delete busLine
      tags:
      - busLine
      x-accepts: application/json
components:
  schemas:
    Stop:
      example:
        latitude: 23.45
        id: 1
        stopName: Ivandry-Ankorondrano-Analakely
        longitude: 56.93
      properties:
        id:
          example: 1
          format: int64
          type: integer
        stopName:
          example: Ivandry-Ankorondrano-Analakely
          type: string
        longitude:
          example: 56.93
          type: number
        latitude:
          example: 23.45
          type: number
      type: object
      xml:
        name: stop
    Route:
      example:
        id: 1
        routeName: Route 1
      properties:
        id:
          example: 1
          format: int64
          type: integer
        routeName:
          example: Route 1
          format: int64
          type: string
      type: object
      xml:
        name: route
    BusLine:
      example:
        id: 1
        lineNumber: 194/E/162/A
      properties:
        id:
          example: 1
          format: int64
          type: integer
        lineNumber:
          example: 194/E/162/A
          format: int64
          type: string
      type: object
      xml:
        name: busLine

